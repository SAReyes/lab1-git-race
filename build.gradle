
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://repo.spring.io/release"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1")
    }
}

apply plugin: "spring-boot"
apply plugin: 'war'

apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

apply plugin: 'org.sonarqube'

jar {
    baseName = 'hello'
    version = '1.0'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'javax.servlet:jstl'

    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:jquery:2.1.4'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
		 file {
             whenMerged { c ->
                 c.entries.findAll {entry -> entry.kind=='lib' && entry.moduleVersion.name?.startsWith('tomcat-')  }*.exported = false
	         }
	     }
    }
}

